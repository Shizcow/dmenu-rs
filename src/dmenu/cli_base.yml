name: dmenu
version: $VERSION # filled in by build.rs
version_short: "v"
about: dynamic menu

args:
  - bottom:
      help:  Places menu at bottom of the screen
      short: b
      long:  bottom
  - fast:
      help:  Grabs keyboard before reading stdin
      short: f
      long:  fast
  - insensitive:
      help:  Case insensitive item matching
      short: i
      long:  insensitive
  - fuzzy:
      help:  Fuzzy matching
      short: z
      long:  --fuzzy
  - lines:
      help:  Number of vertical listing lines
      short: l
      long:  lines
      takes_value: true
      value_name:  LINES
  - monitor:
      help:  X monitor to display on
      short: m
      long:  monitor
      takes_value: true
      value_name:  MONITOR
  - prompt:
      help:  Display a prompt
      short: p
      long:  prompt
      takes_value: true
      value_name:  PROMPT
  - font:
      help: Add menu font
      long_help: "Add menu font. Can be specified multiple times to give fallback fonts. \
          For example, --font Terminus --font 'Font Awesome' would draw everything \
          with Terminus, and fall back to Font Awesome for symbols.\n\
          If a glyph is not found in any of the supplied fonts, it will be provided \
          by the default font (:mono). \n\
          If a glyph is not found in any fonts, it will \
          render as the no-character box."
      long:  font
      visible_aliases: fn
      takes_value: true
      value_name:  FONT
      multiple: true
  - color_normal_background:
      help:  Normal Background Color
      long:  nb
      takes_value: true
      value_name:  COLOR
  - color_normal_foreground:
      help:  Normal Foreground Color
      long:  nf
      takes_value: true
      value_name:  COLOR
  - color_selected_background:
      help:  Selected Background Color
      long:  sb
      takes_value: true
      value_name:  COLOR
  - color_selected_foreground:
      help:  Selected Foreground Color
      long:  sf
      takes_value: true
      value_name:  COLOR
  - window:
      help:  Embed into window ID
      short: w
      long:  window
      takes_value: true
      value_name:  ID
  - render_overrun:
      help: Draw behavior of input box. If specified will draw input
        over the top of items when input exceeds the width of input box
      long: render_overrun
  - render_flex:
      help: Draw behavior of input box. If specified will expand input
        box when input exceeds the width of input box, gracefully moving items
        out of the way
      long: render_flex
  - render_rightalign:
      help: Draw behavior of menu items. If specified will right align
      long: render_rightalign
  - render_default_width:
      help: |
          Default size of input box. Options are:
            min          - input box remains as small as possible
            items        - same size as the largest menu item (default)
                           yields the most static layout
            max          - only one menu item at a time is displayed, right aligned
            custom=WIDTH - fixed width, percentage of total menu width
                           ranges from 0 (min) to 100 (max)
      long: render_default_width
      takes_value: true
      value_name:  DEFAULT_WIDTH
  - nostdin:
      help: Do not read from stdin. Probably not useful unless compiled with plugins
      long: nostdin
